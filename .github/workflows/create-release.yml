name: Create Release


on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to be created, in the form X.Y.Z"
        required: true
        type: string

permissions:
  contents: write
  packages: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Use X.Y.Z"
            exit 1
          fi

      # Check if the user is a member of the Giskard-AI organization
      - name: Check if organization member
        uses: JamesSingleton/is-organization-member@311430b0670cdec4036e721029b78018236a0b74 # 1.1.0
        id: is_organization_member
        with:
          organization: Giskard-AI
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Interrupt job
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        shell: bash
        run: |
          echo "Job failed due to user not being a member of Giskard-AI organization and the 'safe for build' label not being set on the PR"
          exit 1

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-tags: true
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # Write release version env vars
      - name: Write release version env vars
        run: |
          VERSION_NAME="v${{ inputs.version }}"
          VERSION_NUMBER="${VERSION_NAME:1}"
          echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

      # Install uv
      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6

      # Install toml-cli
      - name: Install toml-cli
        run: uv tool install toml-cli

      # Update project version
      - name: Update project version
        run: toml set --toml-path pyproject.toml project.version "${{ env.VERSION_NUMBER }}"

      - name: Configure git
        run: |
          git config --global user.name 'BotReleaser'
          git config --global user.email 'bot.releaser@users.noreply.github.com'

      - name: Commit & tag
        run: |
          git add pyproject.toml
          git commit -m "Release ${{ env.VERSION_NAME }}: Bump version to ${{ env.VERSION_NUMBER }}"
          git tag ${{ env.VERSION_NAME }}
          git push origin main --tags

      # Install dependencies
      - name: Install dependencies
        run: uv sync --frozen --all-extras --dev

      - name: Build package
        run: uv build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          tag_name: ${{ env.VERSION_NAME }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/*.whl
